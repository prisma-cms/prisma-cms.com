# query topic($where: ResourceWhereUniqueInput!) {
#   object: resource(where: $where) {
#     ...topicObject
#   }
# }

mutation updateTopicProcessor(
  $data: TopicUpdateInput!
  $where: ResourceWhereUniqueInput!
) {
  response: updateTopicProcessor(data: $data, where: $where) {
    success
    message
    errors {
      key
      message
    }
    data {
      ...resource_
    }
  }
}

# fragment topicObject on Resource {
#   id
#   createdAt
#   updatedAt
#   type
#   name
#   longtitle
#   content
#   components
#   published
#   deleted
#   hidemenu
#   uri
#   isfolder
#   rating
#   positiveVotesCount
#   negativeVotesCount
#   neutralVotesCount
#   CreatedBy {
#     ...topicUser
#   }
#   Comments(orderBy: id_ASC) {
#     id
#     uri
#     createdAt
#     updatedAt
#     content
#     CreatedBy {
#       ...topicUser
#     }
#   }
#   Blog {
#     id
#     name
#     longtitle
#     uri
#   }
#   Tags {
#     Tag {
#       id
#       name
#     }
#   }
# }

# fragment topicUser on User {
#   id
#   createdAt
#   updatedAt
#   username
#   email
#   phone
#   showEmail
#   showPhone
#   fullname
#   image
#   address
#   sudo
#   active
#   activated
#   deleted
#   hasEmail
#   hasPhone
#   hidden
# }
