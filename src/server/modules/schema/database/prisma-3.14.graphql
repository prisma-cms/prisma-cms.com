
type File {
  id: ID! @id
  ImageResource: Resource @relation(link: INLINE)
}

type Letter {
  id: ID! @id
}

type SmsMessage {
  id: ID! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  Status: LetsadsSmsMessageStatus @relation(link: INLINE)
  recipients: [String!]! @scalarList(strategy: RELATION)
}

type LetsadsSmsMessageStatus {
  id: ID! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type LetsadsSmsMessageStatusItem {
  id: ID! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type SmsProvider {
  id: ID! @id
}

type User {
  id: ID! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  EthAccountAuthed: EthAccount @relation(link: INLINE)
}

type Log {
  id: ID! @id
}

type ResetPassword {
  id: ID! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type UserGroup {
  id: ID! @id
}

type LogedIn {
  id: ID! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Resource {
  id: ID! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type ChatMessage {
  id: ID! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type ChatMessageReaded {
  id: ID! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type ChatRoom {
  id: ID! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  Task: Task @relation(name: "TaskChatRoom")
  Project: Project @relation(name: "ProjectChatRoom")
}

type Project {
  id: ID! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  ChatRoom: ChatRoom @relation(name: "ProjectChatRoom" link: INLINE)
}

type ChatRoomInvitation {
  id: ID! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  Notice: Notice @relation(link: INLINE)
}

type Team {
  id: ID! @id
}

type Notice {
  id: ID! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type NotificationType {
  id: ID! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type ResourceTag {
  id: ID! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Tag {
  id: ID! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Game {
  id: ID! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type GameResult {
  id: ID! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Tournament {
  id: ID! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type TournamentGroup {
  id: ID! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Tourney {
  id: ID! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type TourneyPlayer {
  id: ID! @id
}

type Vote {
  id: ID! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Position {
  id: ID! @id
}

type ProjectMember {
  id: ID! @id
}

type Service {
  id: ID! @id
}

type ServiceCategory {
  id: ID! @id
}

type Task {
  id: ID! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  ChatRoom: ChatRoom @relation(name: "TaskChatRoom" link: INLINE)
}

type TaskMember {
  id: ID! @id
}

type TaskReaction {
  id: ID! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type TeamMember {
  id: ID! @id
}

type Timer {
  id: ID! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type EthAccount {
  id: ID! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  Transaction: EthTransaction @relation(link: INLINE)
}

type EthBlock {
  id: ID! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type EthContractSource {
  id: ID! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type EthTransaction {
  id: ID! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type CallRequest {
  id: ID! @id
}

type Route {
  id: ID! @id
}

type Template {
  id: ID! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

