import React, { Component } from 'react';
import PropTypes from 'prop-types';

import { graphql } from '@apollo/client';

import {
  createCommentProcessor,
  updateCommentProcessor,
} from "../query";

import Comment from "../Comment";

// const NewComment = graphql(createCommentProcessor)(Comment);
const UpdateComment = graphql(updateCommentProcessor)(Comment);

class CommentsList extends Component {

  static propTypes = {
    comments: PropTypes.array.isRequired,
    linkType: PropTypes.oneOf(["comment", "target"]).isRequired,
  };

  static defaultProps = {
    linkType: "comment",
  };

  render() {

    const {
      comments,
      linkType,
    } = this.props;

    return (
      comments.map(n => {
        const {
          id,
        } = n;

        return <UpdateComment
          key={id}
          data={{
            object: n,
          }}
          linkType={linkType}
        />
      })
    );
  }
}


export default CommentsList;